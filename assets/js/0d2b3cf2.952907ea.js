"use strict";(self.webpackChunkbrain=self.webpackChunkbrain||[]).push([[4945],{8052:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"algorithms/contests/leetcode/construct-binary-tree-from-preorder-and-inorder-traversal","title":"Construct Binary Tree from Preorder and Inorder Traversal","description":"Descri\xe7\xe3o","source":"@site/docs/algorithms/contests/leetcode/construct-binary-tree-from-preorder-and-inorder-traversal.md","sourceDirName":"algorithms/contests/leetcode","slug":"/algorithms/contests/leetcode/construct-binary-tree-from-preorder-and-inorder-traversal","permalink":"/brain/docs/algorithms/contests/leetcode/construct-binary-tree-from-preorder-and-inorder-traversal","draft":false,"unlisted":false,"editUrl":"https://github.com/ramonxm/brain/tree/main/docs/algorithms/contests/leetcode/construct-binary-tree-from-preorder-and-inorder-traversal.md","tags":[],"version":"current","lastUpdatedBy":"Ramon Xavier","lastUpdatedAt":1748915689000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2}}');var o=n(4848),d=n(8453);const s={sidebar_position:2},i="Construct Binary Tree from Preorder and Inorder Traversal",a={},l=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Solu\xe7\xe3o",id:"solu\xe7\xe3o",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"construct-binary-tree-from-preorder-and-inorder-traversal",children:"Construct Binary Tree from Preorder and Inorder Traversal"})}),"\n",(0,o.jsx)(r.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,o.jsxs)(r.p,{children:["Given two integer arrays ",(0,o.jsx)(r.code,{children:"preorder"})," and ",(0,o.jsx)(r.code,{children:"inorder"})," where ",(0,o.jsx)(r.code,{children:"preorder"})," is the preorder traversal of a binary tree and ",(0,o.jsx)(r.code,{children:"inorder"})," is the inorder traversal of the same tree, construct and return the binary tree."]}),"\n",(0,o.jsx)(r.h2,{id:"solu\xe7\xe3o",children:"Solu\xe7\xe3o"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:"class TreeNode {\n     val: number\n     left: TreeNode | null\n     right: TreeNode | null\n     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n         this.val = (val === undefined ? 0 : val)\n         this.left = (left === undefined ? null : left)\n         this.right = (right === undefined ? null : right)\n     }\n }\n \n \nfunction buildTree(preorder: number[], inorder: number[]) : TreeNode | null {\n  if (inorder.length) {\n      const index = inorder.indexOf(preorder.shift()!);\n      const root = new TreeNode(inorder[index]);\n\n      root.left = buildTree(preorder, inorder.slice(0, index));\n      root.right = buildTree(preorder, inorder.slice(index + 1));\n      return root;\n  }\n  \n  return null;\n};\n"})})]})}function u(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var t=n(6540);const o={},d=t.createContext(o);function s(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);