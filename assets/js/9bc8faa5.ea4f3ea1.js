"use strict";(self.webpackChunkbrain=self.webpackChunkbrain||[]).push([[9010],{6108:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>x,frontMatter:()=>d,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"concepts/big-o-notation","title":"Nota\xe7\xe3o Big O","description":"Introdu\xe7\xe3o","source":"@site/docs/concepts/big-o-notation.md","sourceDirName":"concepts","slug":"/concepts/big-o-notation","permalink":"/brain/docs/concepts/big-o-notation","draft":false,"unlisted":false,"editUrl":"https://github.com/ramonxm/brain/tree/main/docs/concepts/big-o-notation.md","tags":[],"version":"current","lastUpdatedBy":"Ramon Xavier","lastUpdatedAt":1750116678000,"frontMatter":{},"sidebar":"conceptsSidebar","next":{"title":"Serverless","permalink":"/brain/docs/concepts/serverless"}}');var l=i(4848),o=i(8453);const d={},a="Nota\xe7\xe3o Big O",r={},s=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Principais Complexidades Big O",id:"principais-complexidades-big-o",level:2},{value:"O(1) \u2013 Complexidade Constante",id:"o1--complexidade-constante",level:3},{value:"O(log n) \u2013 Complexidade Logar\xedtmica",id:"olog-n--complexidade-logar\xedtmica",level:3},{value:"O(n) \u2013 Complexidade Linear",id:"on--complexidade-linear",level:3},{value:"O(n log n) \u2013 Complexidade Quasilinear",id:"on-log-n--complexidade-quasilinear",level:3},{value:"O(n\xb2) \u2013 Complexidade Quadr\xe1tica",id:"on--complexidade-quadr\xe1tica",level:3},{value:"O(2\u207f) \u2013 Complexidade Exponencial",id:"o2\u207f--complexidade-exponencial",level:3},{value:"O(n!) \u2013 Complexidade Fatorial",id:"on--complexidade-fatorial",level:3},{value:"Tabela Resumo das Complexidades",id:"tabela-resumo-das-complexidades",level:2},{value:"Gr\xe1fico Visual do Crescimento das Complexidades",id:"gr\xe1fico-visual-do-crescimento-das-complexidades",level:2},{value:"Dicas para Memorizar Big O",id:"dicas-para-memorizar-big-o",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"nota\xe7\xe3o-big-o",children:"Nota\xe7\xe3o Big O"})}),"\n",(0,l.jsx)(n.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,l.jsx)(n.p,{children:"Big O \xe9 uma forma de medir a efici\xeancia de algoritmos em termos de tempo (velocidade) ou espa\xe7o (mem\xf3ria) conforme o tamanho da entrada cresce."}),"\n",(0,l.jsx)(n.p,{children:"Big O n\xe3o mede o tempo de execu\xe7\xe3o real \u2014 ela mede como o tempo ou a mem\xf3ria crescem dependendo do tamanho da entrada."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"principais-complexidades-big-o",children:"Principais Complexidades Big O"}),"\n",(0,l.jsx)(n.h3,{id:"o1--complexidade-constante",children:"O(1) \u2013 Complexidade Constante"}),"\n",(0,l.jsx)(n.p,{children:"O tempo de execu\xe7\xe3o n\xe3o depende do tamanho da entrada. Sempre executa o mesmo n\xfamero de passos."}),"\n",(0,l.jsx)(n.h3,{id:"olog-n--complexidade-logar\xedtmica",children:"O(log n) \u2013 Complexidade Logar\xedtmica"}),"\n",(0,l.jsx)(n.p,{children:"Cada opera\xe7\xe3o reduz o problema pela metade. Exemplo cl\xe1ssico: busca bin\xe1ria."}),"\n",(0,l.jsx)(n.h3,{id:"on--complexidade-linear",children:"O(n) \u2013 Complexidade Linear"}),"\n",(0,l.jsx)(n.p,{children:"O tempo de execu\xe7\xe3o cresce proporcionalmente ao tamanho da entrada. Exemplo: iterar por uma lista."}),"\n",(0,l.jsx)(n.h3,{id:"on-log-n--complexidade-quasilinear",children:"O(n log n) \u2013 Complexidade Quasilinear"}),"\n",(0,l.jsx)(n.p,{children:"Melhor que O(n\xb2), mas pior que O(n). Usado em algoritmos de ordena\xe7\xe3o eficientes como Merge Sort e Quick Sort (em m\xe9dia)."}),"\n",(0,l.jsx)(n.h3,{id:"on--complexidade-quadr\xe1tica",children:"O(n\xb2) \u2013 Complexidade Quadr\xe1tica"}),"\n",(0,l.jsx)(n.p,{children:"Cada elemento \xe9 comparado com todos os outros. Exemplos: Bubble Sort, Selection Sort."}),"\n",(0,l.jsx)(n.h3,{id:"o2\u207f--complexidade-exponencial",children:"O(2\u207f) \u2013 Complexidade Exponencial"}),"\n",(0,l.jsx)(n.p,{children:"O n\xfamero de opera\xe7\xf5es dobra a cada elemento adicionado. Exemplos: gerar todos os subconjuntos de uma lista, problema da mochila (for\xe7a bruta)."}),"\n",(0,l.jsx)(n.h3,{id:"on--complexidade-fatorial",children:"O(n!) \u2013 Complexidade Fatorial"}),"\n",(0,l.jsx)(n.p,{children:"Testa todas as permuta\xe7\xf5es poss\xedveis. Exemplos: problema do caixeiro viajante (for\xe7a bruta), gerar todas as permuta\xe7\xf5es de uma lista."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"tabela-resumo-das-complexidades",children:"Tabela Resumo das Complexidades"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Complexidade"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Nome"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Crescimento"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Exemplo Pr\xe1tico"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(1)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Constante"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Fixo, n\xe3o muda com n"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Acessar item de array por \xedndice"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(log n)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Logar\xedtmica"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Cresce lentamente"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Busca Bin\xe1ria"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(n)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Linear"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Cresce proporcionalmente a n"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Iterar por um array"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(n log n)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Quasilinear"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Entre linear e quadr\xe1tico"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Merge Sort, Quick Sort"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(n\xb2)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Quadr\xe1tica"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Cresce rapidamente"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Bubble Sort, Selection Sort"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(2\u207f)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Exponencial"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Cresce muito r\xe1pido"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Subconjuntos, problemas de combina\xe7\xe3o"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"O(n!)"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Fatorial"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Crescimento explosivo"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Permuta\xe7\xf5es, Caixeiro Viajante"})]})]})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"gr\xe1fico-visual-do-crescimento-das-complexidades",children:"Gr\xe1fico Visual do Crescimento das Complexidades"}),"\n",(0,l.jsx)(n.p,{children:"Crescimento de acordo com o tamanho da entrada n:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"|\n|                                         O(n!)\n|                                     O(2^n)\n|                                 O(n\xb2)\n|                             O(n log n)\n|                          O(n)\n|                       O(log n)\n|__________O(1)____________________________________> n\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"O(1) permanece constante."}),"\n",(0,l.jsx)(n.li,{children:"O(log n) cresce devagar."}),"\n",(0,l.jsx)(n.li,{children:"O(n) cresce proporcionalmente."}),"\n",(0,l.jsx)(n.li,{children:"O(n log n) cresce um pouco mais r\xe1pido."}),"\n",(0,l.jsx)(n.li,{children:"O(n\xb2) cresce rapidamente."}),"\n",(0,l.jsx)(n.li,{children:"O(2\u207f) e O(n!) crescem muito r\xe1pido e logo se tornam impratic\xe1veis."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"dicas-para-memorizar-big-o",children:"Dicas para Memorizar Big O"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"O(1): acesso direto"}),"\n",(0,l.jsx)(n.li,{children:"O(log n): dividindo pela metade"}),"\n",(0,l.jsx)(n.li,{children:"O(n): proporcional"}),"\n",(0,l.jsx)(n.li,{children:"O(n log n): dividir e conquistar"}),"\n",(0,l.jsx)(n.li,{children:"O(n\xb2): compara\xe7\xf5es duplas"}),"\n",(0,l.jsx)(n.li,{children:"O(2\u207f): combina\xe7\xf5es dobrando"}),"\n",(0,l.jsx)(n.li,{children:"O(n!): todas as ordens poss\xedveis"}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var t=i(6540);const l={},o=t.createContext(l);function d(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);