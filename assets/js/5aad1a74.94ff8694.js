"use strict";(self.webpackChunkbrain=self.webpackChunkbrain||[]).push([[669],{3066:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"concepts/memory-stack-heap","title":"Mem\xf3ria Heap e Stack","description":"Quando um programa \xe9 executado, a mem\xf3ria \xe9 alocada para armazenar vari\xe1veis e dados tempor\xe1rios. Duas \xe1reas principais de mem\xf3ria s\xe3o comumente utilizadas: stack e heap.","source":"@site/docs/concepts/memory-stack-heap.md","sourceDirName":"concepts","slug":"/concepts/memory-stack-heap","permalink":"/brain/docs/concepts/memory-stack-heap","draft":false,"unlisted":false,"editUrl":"https://github.com/ramonxm/brain/tree/main/docs/concepts/memory-stack-heap.md","tags":[],"version":"current","lastUpdatedBy":"Ramon Xavier","lastUpdatedAt":1749776206000,"frontMatter":{},"sidebar":"conceptsSidebar","previous":{"title":"Threads","permalink":"/brain/docs/concepts/thread"},"next":{"title":"Swap","permalink":"/brain/docs/concepts/swap"}}');var i=r(4848),n=r(8453);const o={},t="Mem\xf3ria Heap e Stack",c={},d=[{value:"O que \xe9 Stack?",id:"o-que-\xe9-stack",level:2},{value:"Caracter\xedsticas da Stack",id:"caracter\xedsticas-da-stack",level:3},{value:"O que \xe9 Heap?",id:"o-que-\xe9-heap",level:2},{value:"Caracter\xedsticas da Heap",id:"caracter\xedsticas-da-heap",level:3},{value:"Diferen\xe7as entre Stack e Heap",id:"diferen\xe7as-entre-stack-e-heap",level:2},{value:"Resumo",id:"resumo",level:2}];function l(e){const a={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"mem\xf3ria-heap-e-stack",children:"Mem\xf3ria Heap e Stack"})}),"\n",(0,i.jsxs)(a.p,{children:["Quando um programa \xe9 executado, a mem\xf3ria \xe9 alocada para armazenar vari\xe1veis e dados tempor\xe1rios. Duas \xe1reas principais de mem\xf3ria s\xe3o comumente utilizadas: ",(0,i.jsx)(a.strong,{children:"stack"})," e ",(0,i.jsx)(a.strong,{children:"heap"}),"."]}),"\n",(0,i.jsx)(a.h2,{id:"o-que-\xe9-stack",children:"O que \xe9 Stack?"}),"\n",(0,i.jsxs)(a.p,{children:["A ",(0,i.jsx)(a.strong,{children:"stack"})," (ou pilha) \xe9 uma regi\xe3o de mem\xf3ria usada para armazenar vari\xe1veis locais e informa\xe7\xf5es das fun\xe7\xf5es em execu\xe7\xe3o. Cada vez que uma fun\xe7\xe3o \xe9 chamada, um novo bloco (chamado de ",(0,i.jsx)(a.em,{children:"frame"}),") \xe9 adicionado \xe0 stack, contendo:"]}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Par\xe2metros da fun\xe7\xe3o"}),"\n",(0,i.jsx)(a.li,{children:"Vari\xe1veis locais (especialmente tipos primitivos)"}),"\n",(0,i.jsx)(a.li,{children:"Endere\xe7o de retorno (para saber para onde voltar ap\xf3s a execu\xe7\xe3o da fun\xe7\xe3o)"}),"\n"]}),"\n",(0,i.jsxs)(a.p,{children:["Quando a fun\xe7\xe3o termina, esse bloco \xe9 removido automaticamente. A stack segue o modelo ",(0,i.jsx)(a.strong,{children:"LIFO (Last In, First Out)"}),": o \xfaltimo item adicionado \xe9 o primeiro a ser removido. Isso torna a stack muito eficiente, mas ela possui um tamanho limitado, determinado pelo sistema operacional ou pelo runtime."]}),"\n",(0,i.jsx)(a.h3,{id:"caracter\xedsticas-da-stack",children:"Caracter\xedsticas da Stack"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Aloca\xe7\xe3o e libera\xe7\xe3o autom\xe1ticas (gerenciadas pelo pr\xf3prio runtime)"}),"\n",(0,i.jsx)(a.li,{children:"Extremamente r\xe1pida e eficiente"}),"\n",(0,i.jsxs)(a.li,{children:["Tamanho limitado (pode causar ",(0,i.jsx)(a.em,{children:"stack overflow"})," em casos de recurs\xe3o profunda, por exemplo)"]}),"\n",(0,i.jsx)(a.li,{children:"Usada para vari\xe1veis locais, chamadas de fun\xe7\xe3o e controle de fluxo"}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"o-que-\xe9-heap",children:"O que \xe9 Heap?"}),"\n",(0,i.jsxs)(a.p,{children:["A ",(0,i.jsx)(a.strong,{children:"heap"})," \xe9 uma \xe1rea de mem\xf3ria usada para aloca\xe7\xe3o din\xe2mica, ou seja, mem\xf3ria reservada durante a execu\xe7\xe3o do programa conforme a necessidade."]}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["Em linguagens de baixo n\xedvel (como C e C++), o programador \xe9 respons\xe1vel por alocar (",(0,i.jsx)(a.code,{children:"malloc"}),") e liberar (",(0,i.jsx)(a.code,{children:"free"}),") essa mem\xf3ria manualmente."]}),"\n",(0,i.jsxs)(a.li,{children:["Em linguagens de alto n\xedvel (como Java, JavaScript, Python, C#), o gerenciamento da heap \xe9 feito automaticamente por mecanismos de ",(0,i.jsx)(a.strong,{children:"garbage collection"})," (coletor de lixo), que libera a mem\xf3ria n\xe3o mais utilizada."]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"A heap \xe9 geralmente utilizada para armazenar objetos e estruturas de dados de maior dura\xe7\xe3o e complexidade, como listas, \xe1rvores, grafos, etc."}),"\n",(0,i.jsx)(a.h3,{id:"caracter\xedsticas-da-heap",children:"Caracter\xedsticas da Heap"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Aloca\xe7\xe3o e libera\xe7\xe3o manual (em C/C++) ou autom\xe1tica via garbage collector (em linguagens modernas)"}),"\n",(0,i.jsx)(a.li,{children:"Permite criar estruturas de dados din\xe2micas e flex\xedveis"}),"\n",(0,i.jsx)(a.li,{children:"Mais lenta que a stack (devido \xe0 complexidade de gerenciamento)"}),"\n",(0,i.jsx)(a.li,{children:"Tamanho geralmente muito maior que a stack"}),"\n",(0,i.jsx)(a.li,{children:"Possibilidade de vazamentos de mem\xf3ria caso a libera\xe7\xe3o n\xe3o seja feita corretamente (em linguagens sem garbage collector)"}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"diferen\xe7as-entre-stack-e-heap",children:"Diferen\xe7as entre Stack e Heap"}),"\n",(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:"Stack"}),(0,i.jsx)(a.th,{children:"Heap"})]})}),(0,i.jsxs)(a.tbody,{children:[(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Aloca\xe7\xe3o autom\xe1tica"}),(0,i.jsx)(a.td,{children:"Aloca\xe7\xe3o manual (C/C++) ou autom\xe1tica (GC)"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Muito r\xe1pida"}),(0,i.jsx)(a.td,{children:"Mais lenta"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Tamanho limitado"}),(0,i.jsx)(a.td,{children:"Tamanho geralmente maior"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Usada para vari\xe1veis locais e chamadas de fun\xe7\xe3o"}),(0,i.jsx)(a.td,{children:"Usada para objetos e estruturas din\xe2micas"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Libera\xe7\xe3o autom\xe1tica"}),(0,i.jsx)(a.td,{children:"Libera\xe7\xe3o manual ou autom\xe1tica (GC)"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Menor risco de vazamentos"}),(0,i.jsx)(a.td,{children:"Risco de vazamento em algumas situa\xe7\xf5es"})]})]})]}),"\n",(0,i.jsx)(a.h2,{id:"resumo",children:"Resumo"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Stack:"})," usada para dados tempor\xe1rios e chamadas de fun\xe7\xe3o, com gerenciamento autom\xe1tico e muito eficiente."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Heap:"})," usada para aloca\xe7\xe3o din\xe2mica de objetos e estruturas de dados mais complexas, com gerenciamento manual ou autom\xe1tico dependendo da linguagem."]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"Entender como funcionam stack e heap \xe9 fundamental para escrever programas eficientes, escal\xe1veis e com bom gerenciamento de mem\xf3ria."})]})}function m(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>o,x:()=>t});var s=r(6540);const i={},n=s.createContext(i);function o(e){const a=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(n.Provider,{value:a},e.children)}}}]);