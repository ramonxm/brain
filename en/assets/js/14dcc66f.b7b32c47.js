"use strict";(self.webpackChunkbrain=self.webpackChunkbrain||[]).push([[4440],{994:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"algorithms/contests/leetcode/sort-list","title":"Sort List","description":"Problema","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/algorithms/contests/leetcode/sort-list.md","sourceDirName":"algorithms/contests/leetcode","slug":"/algorithms/contests/leetcode/sort-list","permalink":"/brain/en/docs/algorithms/contests/leetcode/sort-list","draft":false,"unlisted":false,"editUrl":"https://github.com/ramonxm/brain/tree/main/docs/algorithms/contests/leetcode/sort-list.md","tags":[],"version":"current","lastUpdatedBy":"Ramon Xavier","lastUpdatedAt":1749774019000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"algorithmsSidebar","previous":{"title":"Single Number","permalink":"/brain/en/docs/algorithms/contests/leetcode/single-number"},"next":{"title":"Roman to Integer","permalink":"/brain/en/docs/algorithms/contests/leetcode/roman-to-integer"}}');var o=t(4848),a=t(8453);const l={sidebar_position:3},i="Sort List",r={},d=[{value:"Problema",id:"problema",level:2},{value:"Solu\xe7\xe3o",id:"solu\xe7\xe3o",level:2},{value:"Explica\xe7\xe3o",id:"explica\xe7\xe3o",level:2},{value:"Complexidade",id:"complexidade",level:2},{value:"Exemplo",id:"exemplo",level:2},{value:"Casos de Teste",id:"casos-de-teste",level:2},{value:"Observa\xe7\xf5es",id:"observa\xe7\xf5es",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"sort-list",children:"Sort List"})}),"\n",(0,o.jsx)(n.h2,{id:"problema",children:"Problema"}),"\n",(0,o.jsx)(n.p,{children:"Dada a cabe\xe7a de uma lista encadeada, retorne a lista encadeada ordenada em ordem crescente."}),"\n",(0,o.jsx)(n.h2,{id:"solu\xe7\xe3o",children:"Solu\xe7\xe3o"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'class ListNode {\n    val: number;\n    next: ListNode | null;\n    constructor(val?: number, next?: ListNode | null) {\n        this.val = (val === undefined ? 0 : val);\n        this.next = (next === undefined ? null : next);\n    }\n}\n\nfunction sortList(head: ListNode | null): ListNode | null {\n    if (!head || !head.next) {\n        return head;\n    }\n    \n    // Encontra o meio da lista usando o m\xe9todo "fast and slow pointers"\n    let slow: ListNode | null = head;\n    let fast: ListNode | null = head.next;\n    \n    while (fast && fast.next) {\n        slow = slow!.next;\n        fast = fast.next.next;\n    }\n    \n    // Divide a lista em duas partes\n    const mid = slow!.next;\n    slow!.next = null;\n    \n    // Ordena recursivamente as duas metades\n    const left = sortList(head);\n    const right = sortList(mid);\n    \n    // Combina as duas metades ordenadas\n    return merge(left, right);\n}\n\nfunction merge(l1: ListNode | null, l2: ListNode | null): ListNode | null {\n    const dummy = new ListNode(0);\n    let current = dummy;\n    \n    while (l1 && l2) {\n        if (l1.val <= l2.val) {\n            current.next = l1;\n            l1 = l1.next;\n        } else {\n            current.next = l2;\n            l2 = l2.next;\n        }\n        current = current.next;\n    }\n    \n    if (l1) current.next = l1;\n    if (l2) current.next = l2;\n    \n    return dummy.next;\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"explica\xe7\xe3o",children:"Explica\xe7\xe3o"}),"\n",(0,o.jsx)(n.p,{children:"A solu\xe7\xe3o utiliza o algoritmo Merge Sort adaptado para listas encadeadas:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Divide a lista em duas metades usando a t\xe9cnica de ponteiros r\xe1pido e lento"}),"\n",(0,o.jsx)(n.li,{children:"Ordena recursivamente cada metade"}),"\n",(0,o.jsx)(n.li,{children:"Combina as duas metades ordenadas"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"O processo de divis\xe3o e combina\xe7\xe3o continua at\xe9 que a lista esteja completamente ordenada."}),"\n",(0,o.jsx)(n.h2,{id:"complexidade",children:"Complexidade"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Tempo: O(n log n)"}),"\n",(0,o.jsx)(n.li,{children:"Espa\xe7o: O(log n) devido \xe0 recurs\xe3o"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"exemplo",children:"Exemplo"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Criando a lista: 4 -> 2 -> 1 -> 3\nconst head = new ListNode(4);\nhead.next = new ListNode(2);\nhead.next.next = new ListNode(1);\nhead.next.next.next = new ListNode(3);\n\nconst sorted = sortList(head);\n// Resultado: 1 -> 2 -> 3 -> 4\n"})}),"\n",(0,o.jsx)(n.h2,{id:"casos-de-teste",children:"Casos de Teste"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Teste 1: Lista j\xe1 ordenada\nconst test1 = new ListNode(1);\ntest1.next = new ListNode(2);\ntest1.next.next = new ListNode(3);\nconsole.log(sortList(test1)); // 1 -> 2 -> 3\n\n// Teste 2: Lista em ordem reversa\nconst test2 = new ListNode(3);\ntest2.next = new ListNode(2);\ntest2.next.next = new ListNode(1);\nconsole.log(sortList(test2)); // 1 -> 2 -> 3\n\n// Teste 3: Lista com elementos repetidos\nconst test3 = new ListNode(3);\ntest3.next = new ListNode(1);\ntest3.next.next = new ListNode(3);\ntest3.next.next.next = new ListNode(1);\nconsole.log(sortList(test3)); // 1 -> 1 -> 3 -> 3\n"})}),"\n",(0,o.jsx)(n.h2,{id:"observa\xe7\xf5es",children:"Observa\xe7\xf5es"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A solu\xe7\xe3o \xe9 est\xe1vel (mant\xe9m a ordem relativa de elementos iguais)"}),"\n",(0,o.jsx)(n.li,{children:"Usa espa\xe7o extra O(log n) devido \xe0 recurs\xe3o"}),"\n",(0,o.jsx)(n.li,{children:"\xc9 eficiente para listas encadeadas, pois n\xe3o requer acesso aleat\xf3rio"}),"\n",(0,o.jsx)(n.li,{children:"O Merge Sort \xe9 uma boa escolha para listas encadeadas porque n\xe3o requer trocas de elementos, apenas ajustes nos ponteiros"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var s=t(6540);const o={},a=s.createContext(o);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);